import { __decorate, __metadata } from "tslib";
import { Directive } from "@angular/core";
import { NG_VALIDATORS } from "@angular/forms";
import { NgxCpfCnpj } from "./ngx-cpf-cnpj";
var CpfCnpjValidatorDirective = /** @class */ (function () {
    function CpfCnpjValidatorDirective() {
        this.validator = this.cpfCnpjValidator();
    }
    CpfCnpjValidatorDirective_1 = CpfCnpjValidatorDirective;
    CpfCnpjValidatorDirective.prototype.validate = function (c) {
        return this.validator(c);
    };
    CpfCnpjValidatorDirective.prototype.cpfCnpjValidator = function () {
        return function (c) {
            var value = c.value;
            if (value != null) {
                value = NgxCpfCnpj.getDigitos(value);
                if (value.length === 11) {
                    if (NgxCpfCnpj.cpfIsValid(value)) {
                        return null;
                    }
                    else {
                        return {
                            cpfcnpjvalidator: {
                                valid: false
                            }
                        };
                    }
                }
                else if (value.length === 14) {
                    if (NgxCpfCnpj.cnpjIsValid(value)) {
                        return null;
                    }
                    else {
                        return {
                            cpfcnpjvalidator: {
                                valid: false
                            }
                        };
                    }
                }
            }
            return {
                cpfcnpjvalidator: {
                    valid: false
                }
            };
        };
    };
    var CpfCnpjValidatorDirective_1;
    CpfCnpjValidatorDirective = CpfCnpjValidatorDirective_1 = __decorate([
        Directive({
            selector: "[nccCpfCnpjValidator] [ngModel]",
            providers: [
                {
                    provide: NG_VALIDATORS,
                    useExisting: CpfCnpjValidatorDirective_1,
                    multi: true
                }
            ]
        }),
        __metadata("design:paramtypes", [])
    ], CpfCnpjValidatorDirective);
    return CpfCnpjValidatorDirective;
}());
export { CpfCnpjValidatorDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3BmLWNucGotdmFsaWRhdG9yLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1jcGYtY25wai8iLCJzb3VyY2VzIjpbImxpYi9jcGYtY25wai12YWxpZGF0b3IuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzFDLE9BQU8sRUFDTCxhQUFhLEVBSWQsTUFBTSxnQkFBZ0IsQ0FBQztBQUN4QixPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFZNUM7SUFFRTtRQUNFLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLGdCQUFnQixFQUFFLENBQUM7SUFDM0MsQ0FBQztrQ0FKVSx5QkFBeUI7SUFNcEMsNENBQVEsR0FBUixVQUFTLENBQWM7UUFDckIsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzNCLENBQUM7SUFFRCxvREFBZ0IsR0FBaEI7UUFDRSxPQUFPLFVBQUMsQ0FBYztZQUNwQixJQUFJLEtBQUssR0FBbUIsQ0FBQyxDQUFDLEtBQUssQ0FBQztZQUNwQyxJQUFJLEtBQUssSUFBSSxJQUFJLEVBQUU7Z0JBQ2pCLEtBQUssR0FBRyxVQUFVLENBQUMsVUFBVSxDQUFDLEtBQUssQ0FBQyxDQUFDO2dCQUNyQyxJQUFJLEtBQUssQ0FBQyxNQUFNLEtBQUssRUFBRSxFQUFFO29CQUN2QixJQUFJLFVBQVUsQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFDLEVBQUU7d0JBQ2hDLE9BQU8sSUFBSSxDQUFDO3FCQUNiO3lCQUFNO3dCQUNMLE9BQU87NEJBQ0wsZ0JBQWdCLEVBQUU7Z0NBQ2hCLEtBQUssRUFBRSxLQUFLOzZCQUNiO3lCQUNGLENBQUM7cUJBQ0g7aUJBQ0Y7cUJBQU0sSUFBSSxLQUFLLENBQUMsTUFBTSxLQUFLLEVBQUUsRUFBRTtvQkFDOUIsSUFBSSxVQUFVLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxFQUFFO3dCQUNqQyxPQUFPLElBQUksQ0FBQztxQkFDYjt5QkFBTTt3QkFDTCxPQUFPOzRCQUNMLGdCQUFnQixFQUFFO2dDQUNoQixLQUFLLEVBQUUsS0FBSzs2QkFDYjt5QkFDRixDQUFDO3FCQUNIO2lCQUNGO2FBQ0Y7WUFFRCxPQUFPO2dCQUNMLGdCQUFnQixFQUFFO29CQUNoQixLQUFLLEVBQUUsS0FBSztpQkFDYjthQUNGLENBQUM7UUFDSixDQUFDLENBQUM7SUFDSixDQUFDOztJQTVDVSx5QkFBeUI7UUFWckMsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLGlDQUFpQztZQUMzQyxTQUFTLEVBQUU7Z0JBQ1Q7b0JBQ0UsT0FBTyxFQUFFLGFBQWE7b0JBQ3RCLFdBQVcsRUFBRSwyQkFBeUI7b0JBQ3RDLEtBQUssRUFBRSxJQUFJO2lCQUNaO2FBQ0Y7U0FDRixDQUFDOztPQUNXLHlCQUF5QixDQTZDckM7SUFBRCxnQ0FBQztDQUFBLEFBN0NELElBNkNDO1NBN0NZLHlCQUF5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XHJcbmltcG9ydCB7XHJcbiAgTkdfVkFMSURBVE9SUyxcclxuICBWYWxpZGF0b3IsXHJcbiAgVmFsaWRhdG9yRm4sXHJcbiAgRm9ybUNvbnRyb2xcclxufSBmcm9tIFwiQGFuZ3VsYXIvZm9ybXNcIjtcclxuaW1wb3J0IHsgTmd4Q3BmQ25waiB9IGZyb20gXCIuL25neC1jcGYtY25walwiO1xyXG5cclxuQERpcmVjdGl2ZSh7XHJcbiAgc2VsZWN0b3I6IFwiW25jY0NwZkNucGpWYWxpZGF0b3JdIFtuZ01vZGVsXVwiLFxyXG4gIHByb3ZpZGVyczogW1xyXG4gICAge1xyXG4gICAgICBwcm92aWRlOiBOR19WQUxJREFUT1JTLFxyXG4gICAgICB1c2VFeGlzdGluZzogQ3BmQ25walZhbGlkYXRvckRpcmVjdGl2ZSxcclxuICAgICAgbXVsdGk6IHRydWVcclxuICAgIH1cclxuICBdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBDcGZDbnBqVmFsaWRhdG9yRGlyZWN0aXZlIGltcGxlbWVudHMgVmFsaWRhdG9yIHtcclxuICB2YWxpZGF0b3I6IFZhbGlkYXRvckZuO1xyXG4gIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgdGhpcy52YWxpZGF0b3IgPSB0aGlzLmNwZkNucGpWYWxpZGF0b3IoKTtcclxuICB9XHJcblxyXG4gIHZhbGlkYXRlKGM6IEZvcm1Db250cm9sKSB7XHJcbiAgICByZXR1cm4gdGhpcy52YWxpZGF0b3IoYyk7XHJcbiAgfVxyXG5cclxuICBjcGZDbnBqVmFsaWRhdG9yKCk6IFZhbGlkYXRvckZuIHtcclxuICAgIHJldHVybiAoYzogRm9ybUNvbnRyb2wpID0+IHtcclxuICAgICAgbGV0IHZhbHVlOiBzdHJpbmcgPSA8c3RyaW5nPmMudmFsdWU7XHJcbiAgICAgIGlmICh2YWx1ZSAhPSBudWxsKSB7XHJcbiAgICAgICAgdmFsdWUgPSBOZ3hDcGZDbnBqLmdldERpZ2l0b3ModmFsdWUpO1xyXG4gICAgICAgIGlmICh2YWx1ZS5sZW5ndGggPT09IDExKSB7XHJcbiAgICAgICAgICBpZiAoTmd4Q3BmQ25wai5jcGZJc1ZhbGlkKHZhbHVlKSkge1xyXG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgICAgY3BmY25wanZhbGlkYXRvcjoge1xyXG4gICAgICAgICAgICAgICAgdmFsaWQ6IGZhbHNlXHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0gZWxzZSBpZiAodmFsdWUubGVuZ3RoID09PSAxNCkge1xyXG4gICAgICAgICAgaWYgKE5neENwZkNucGouY25waklzVmFsaWQodmFsdWUpKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgICBjcGZjbnBqdmFsaWRhdG9yOiB7XHJcbiAgICAgICAgICAgICAgICB2YWxpZDogZmFsc2VcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICByZXR1cm4ge1xyXG4gICAgICAgIGNwZmNucGp2YWxpZGF0b3I6IHtcclxuICAgICAgICAgIHZhbGlkOiBmYWxzZVxyXG4gICAgICAgIH1cclxuICAgICAgfTtcclxuICAgIH07XHJcbiAgfVxyXG59XHJcbiJdfQ==