{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://ngx-cpf-cnpj/lib/ngx-cpf-cnpj.ts","ng://ngx-cpf-cnpj/lib/cpf-cnpj-validator.directive.ts","ng://ngx-cpf-cnpj/lib/cpf-cnpj-mask.directive.ts","ng://ngx-cpf-cnpj/lib/ngx-cpf-cnpj.module.ts","ng://ngx-cpf-cnpj/lib/cpf-cnpj.validator.ts"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","metadataKey","metadataValue","metadata","NgxCpfCnpj","convertToCpfCnpj","num","toString","replaceObject","4","searchValue","newValue","5","6","7","8","9","10","11","12","13","14","getDigitos","replace","value","regex","RegExp","cpfIsValid","IsValid","cpf","cpf_invalidos","soma","parseInt","charAt","dv","cnpjIsValid","cnpj","mult","CpfCnpjValidatorDirective","this","validator","cpfCnpjValidator","prototype","validate","cpfcnpjvalidator","valid","CpfCnpjValidatorDirective_1","Directive","selector","providers","provide","NG_VALIDATORS","useExisting","multi","CpfCnpjMaskDirective","renderer","el","onInput","event","setProperty","nativeElement","Renderer2","ElementRef","HostListener","NgxCpfCnpjModule","NgModule","declarations","imports","exports","CpfCnpjValidator","control","invalid"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export class NgxCpfCnpj {\r\n  constructor() {}\r\n\r\n  public static convertToCpfCnpj(num) {\r\n    if (num && num.length > 3 && num.length <= 14) {\r\n      const replaceByLength = {\r\n        4: { searchValue: /(\\d+)(\\d{3})/, newValue: \"$1.$2\" },\r\n        5: { searchValue: /(\\d+)(\\d{3})/, newValue: \"$1.$2\" },\r\n        6: { searchValue: /(\\d+)(\\d{3})/, newValue: \"$1.$2\" },\r\n        7: { searchValue: /(\\d+)(\\d{3})(\\d{3})/, newValue: \"$1.$2.$3\" },\r\n        8: { searchValue: /(\\d+)(\\d{3})(\\d{3})/, newValue: \"$1.$2.$3\" },\r\n        9: { searchValue: /(\\d+)(\\d{3})(\\d{3})/, newValue: \"$1.$2.$3\" },\r\n        10: {\r\n          searchValue: /(\\d+)(\\d{3})(\\d{3})(\\d{1})/,\r\n          newValue: \"$1.$2.$3-$4\"\r\n        },\r\n        11: {\r\n          searchValue: /(\\d+)(\\d{3})(\\d{3})(\\d{2})/,\r\n          newValue: \"$1.$2.$3-$4\"\r\n        },\r\n        12: {\r\n          searchValue: /(\\d+)(\\d{3})(\\d{3})(\\d{4})/,\r\n          newValue: \"$1.$2.$3-$4\"\r\n        },\r\n        13: {\r\n          searchValue: /(\\d+)(\\d{3})(\\d{3})(\\d{4})(\\d{2})/,\r\n          newValue: \"$1.$2.$3/$4-$5\"\r\n        },\r\n        14: {\r\n          searchValue: /(\\d+)(\\d{3})(\\d{3})(\\d{4})(\\d{2})/,\r\n          newValue: \"$1.$2.$3/$4-$5\"\r\n        }\r\n      };\r\n\r\n      num = num.toString();\r\n      num = NgxCpfCnpj.getDigitos(num);\r\n      const replaceObject = replaceByLength[num.length];\r\n      num = num.replace(replaceObject.searchValue, replaceObject.newValue);\r\n    }\r\n    return num;\r\n  }\r\n\r\n  public static getDigitos(value) {\r\n    const regex = new RegExp(\"\\\\D\", \"g\");\r\n    return value.replace(regex, \"\");\r\n  }\r\n\r\n  public static cpfIsValid(value): boolean {\r\n    // Só faz a validação se o texto não for vazio.\r\n    // Se for vazio, validar campo requerido não é a responsabilidade desta validação\r\n    if (value.length > 0) {\r\n      let IsValid = false;\r\n      const cpf = NgxCpfCnpj.getDigitos(value); // Obtém o texto digitado no campo, remove tudo menos os digitos\r\n      if (cpf.length === 11) {\r\n        // Se digitou o CPF por completo\r\n        // Verificação dos CPF's que não respeitam a regra de validação mas não são válidos\r\n        const cpf_invalidos = [\r\n          \"00000000000\",\r\n          \"11111111111\",\r\n          \"22222222222\",\r\n          \"33333333333\",\r\n          \"44444444444\",\r\n          \"55555555555\",\r\n          \"66666666666\",\r\n          \"77777777777\",\r\n          \"88888888888\",\r\n          \"99999999999\"\r\n        ];\r\n        for (let i = 0; i < 10; i++) {\r\n          if (cpf === cpf_invalidos[i]) {\r\n            return IsValid;\r\n          }\r\n        }\r\n\r\n        // Calculando o Primeiro Dígito Verificador\r\n        let soma = 0; // Soma para o CPF \"ABC.DEF.GHI-XZ\": (A*10)+(B*9)+...+(H*3)+(I*2)\r\n        for (let i = 0; i < 9; i++) {\r\n          soma = soma + parseInt(cpf.charAt(i), 10) * (10 - i);\r\n        }\r\n        let dv = 0; // Primeiro dígito verificador (será zero se o resto da divisão de soma por 11 for < 2)\r\n        if (soma % 11 > 1) {\r\n          dv = 11 - (soma % 11);\r\n        }\r\n\r\n        if (parseInt(cpf.charAt(9), 10) !== dv) {\r\n          return IsValid;\r\n        }\r\n\r\n        // Calculando o Segundo Dígito Verificador\r\n        soma = 0; // Soma para o CPF \"ABC.DEF.GHI-XZ\": (A*11)+(B*10)+...+(H*4)+(I*3)+(X*2)\r\n        for (let i = 0; i < 10; i++) {\r\n          soma = soma + parseInt(cpf.charAt(i), 10) * (11 - i);\r\n        }\r\n        dv = 0; // Segundo dígito verificador (será zero se o resto da divisão de soma por 11 for < 2)\r\n        if (soma % 11 > 1) {\r\n          dv = 11 - (soma % 11);\r\n        }\r\n\r\n        if (parseInt(cpf.charAt(10), 10) !== dv) {\r\n          return IsValid;\r\n        }\r\n\r\n        IsValid = true;\r\n      }\r\n      return IsValid;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  public static cnpjIsValid(value): boolean {\r\n    // Só faz a validação se o texto não for vazio.\r\n    // Se for vazio, validar campo requerido não é a responsabilidade desta validação\r\n    if (value.length > 0) {\r\n      let IsValid = false;\r\n      const cnpj = NgxCpfCnpj.getDigitos(value); // Obtém o texto digitado no campo, remove tudo menos os digitos\r\n\r\n      if (cnpj.length === 14) {\r\n        // Se digitou o CNPJ por completo\r\n        // Verificação do CNPJ que não respeita a regra de validação mas não são válidos\r\n        if (cnpj === \"00000000000000\") {\r\n          return IsValid;\r\n        }\r\n\r\n        // Calculando o Primeiro Dígito Verificador\r\n        let soma = 0; // Soma para o CNPJ \"AB.CDE.FGH/IJKL-XZ\": (A*5)+(B*4)+(C*3)+(D*2)+(E*9)+(F*8)+...+(K*3)+(L*2)\r\n        let mult = 5; // multiplicador\r\n        for (let i = 0; i < 12; i++) {\r\n          soma = soma + parseInt(cnpj.charAt(i), 10) * mult;\r\n          mult--; // decrementa o multiplicador\r\n          if (mult === 1) {\r\n            mult = 9;\r\n          } // volta o multiplicador para o valor 9 (para decrementar até o valor 2)\r\n        }\r\n        let dv = 0; // Primeiro dígito verificador (será zero se o resto da divisão de soma por 11 for < 2)\r\n        if (soma % 11 > 1) {\r\n          dv = 11 - (soma % 11);\r\n        }\r\n        if (parseInt(cnpj.charAt(12), 10) !== dv) {\r\n          return IsValid;\r\n        }\r\n\r\n        // Calculando o Segundo Dígito Verificador\r\n        soma = 0; // Soma para o CNPJ \"AB.CDE.FGH/IJKL-XZ\": (A*6)+(B*5)+(C*4)+(D*3)+(E*2)+(F*9)+...+(K*4)+(L*3)+(X*2)\r\n        mult = 6; // multiplicador\r\n        for (let i = 0; i < 13; i++) {\r\n          soma = soma + parseInt(cnpj.charAt(i), 10) * mult;\r\n          mult--; // decrementa o multiplicador\r\n          if (mult === 1) {\r\n            mult = 9;\r\n          } // volta o multiplicador para o valor 9 (para decrementar até o valor 2)\r\n        }\r\n        dv = 0; // Segundo dígito verificador (será zero se o resto da divisão de soma por 11 for < 2)\r\n        if (soma % 11 > 1) {\r\n          dv = 11 - (soma % 11);\r\n        }\r\n        if (parseInt(cnpj.charAt(13), 10) !== dv) {\r\n          return IsValid;\r\n        }\r\n\r\n        IsValid = true;\r\n      }\r\n      return IsValid;\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","import { Directive } from \"@angular/core\";\r\nimport {\r\n  NG_VALIDATORS,\r\n  Validator,\r\n  ValidatorFn,\r\n  FormControl\r\n} from \"@angular/forms\";\r\nimport { NgxCpfCnpj } from \"./ngx-cpf-cnpj\";\r\n\r\n@Directive({\r\n  selector: \"[nccCpfCnpjValidator] [ngModel]\",\r\n  providers: [\r\n    {\r\n      provide: NG_VALIDATORS,\r\n      useExisting: CpfCnpjValidatorDirective,\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class CpfCnpjValidatorDirective implements Validator {\r\n  validator: ValidatorFn;\r\n  constructor() {\r\n    this.validator = this.cpfCnpjValidator();\r\n  }\r\n\r\n  validate(c: FormControl) {\r\n    return this.validator(c);\r\n  }\r\n\r\n  cpfCnpjValidator(): ValidatorFn {\r\n    return (c: FormControl) => {\r\n      let value: string = <string>c.value;\r\n      if (value != null) {\r\n        value = NgxCpfCnpj.getDigitos(value);\r\n        if (value.length === 11) {\r\n          if (NgxCpfCnpj.cpfIsValid(value)) {\r\n            return null;\r\n          } else {\r\n            return {\r\n              cpfcnpjvalidator: {\r\n                valid: false\r\n              }\r\n            };\r\n          }\r\n        } else if (value.length === 14) {\r\n          if (NgxCpfCnpj.cnpjIsValid(value)) {\r\n            return null;\r\n          } else {\r\n            return {\r\n              cpfcnpjvalidator: {\r\n                valid: false\r\n              }\r\n            };\r\n          }\r\n        }\r\n      }\r\n\r\n      return {\r\n        cpfcnpjvalidator: {\r\n          valid: false\r\n        }\r\n      };\r\n    };\r\n  }\r\n}\r\n","import { Directive, HostListener, Renderer2, ElementRef } from \"@angular/core\";\r\nimport { NgModel } from \"@angular/forms\";\r\nimport { NgxCpfCnpj } from \"./ngx-cpf-cnpj\";\r\n@Directive({\r\n  selector: \"[nccCpfCnpjMask]\"\r\n})\r\nexport class CpfCnpjMaskDirective {\r\n  constructor(private renderer: Renderer2, private el: ElementRef) {}\r\n\r\n  @HostListener(\"input\", [\"$event\"]) onInput(event) {\r\n    if (event.target.value.length <= 18) {\r\n      this.renderer.setProperty(\r\n        this.el.nativeElement,\r\n        \"value\",\r\n        NgxCpfCnpj.convertToCpfCnpj(event.target.value)\r\n      );\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CpfCnpjMaskDirective } from \"./cpf-cnpj-mask.directive\";\r\nimport { CpfCnpjValidatorDirective } from \"./cpf-cnpj-validator.directive\";\r\n\r\n@NgModule({\r\n  declarations: [CpfCnpjMaskDirective, CpfCnpjValidatorDirective],\r\n  imports: [],\r\n  exports: [CpfCnpjMaskDirective, CpfCnpjValidatorDirective]\r\n})\r\nexport class NgxCpfCnpjModule {}\r\n","import { FormControl } from \"@angular/forms\";\r\nimport { NgxCpfCnpj } from \"./ngx-cpf-cnpj\";\r\n\r\nexport interface ValidationResult {\r\n  [key: string]: boolean;\r\n}\r\n\r\nexport class CpfCnpjValidator {\r\n  public static validate(control: FormControl): ValidationResult {\r\n    return NgxCpfCnpj.cpfIsValid(control.value) ? null : { invalid: false };\r\n  }\r\n}\r\n"]}